var f=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var z=Object.getOwnPropertyNames;var p=Object.prototype.hasOwnProperty;var b=(t,a)=>{for(var r in a)f(t,r,{get:a[r],enumerable:!0})},g=(t,a,r,y)=>{if(a&&typeof a=="object"||typeof a=="function")for(let o of z(a))!p.call(t,o)&&o!==r&&f(t,o,{get:()=>a[o],enumerable:!(y=T(a,o))||y.enumerable});return t};var $=t=>g(f({},"__esModule",{value:!0}),t);var X={};b(X,{convert:()=>m,parse:()=>d,resolve:()=>u});module.exports=$(X);var e=require("./js/color.js"),h=require("./js/common.js");/*!
 * CSS color - Resolve, parse, convert CSS color.
 * @license MIT
 * @copyright asamuzaK (Kazz)
 * @see {@link https://github.com/asamuzaK/cssColor/blob/main/LICENSE}
 */const u=(t,a={})=>{if((0,h.isString)(t))t=t.trim();else throw new TypeError(`Expected String but got ${(0,h.getType)(t)}.`);const{currentColor:r,format:y,key:o}=a;let s,i,n,x;/^currentcolor$/i.test(t)?r?r.startsWith("color-mix")?[s,i,n,x]=(0,e.resolveColorMix)(r):r.startsWith("color(")?[s,i,n,x]=(0,e.resolveColorFunc)(r):[s,i,n,x]=(0,e.resolveColorValue)(r):(s=0,i=0,n=0,x=0):/^transparent$/i.test(t)?(s=0,i=0,n=0,x=0):t.startsWith("color-mix")?[s,i,n,x]=(0,e.resolveColorMix)(t):t.startsWith("color(")?[s,i,n,x]=(0,e.resolveColorFunc)(t):[s,i,n,x]=(0,e.resolveColorValue)(t);let c;switch(y){case"array":{o?c=[o,[s,i,n,x]]:c=[s,i,n,x];break}case"hex":{let l;/^transparent$/i.test(t)?l=null:l=(0,e.convertRgbToHex)([s,i,n]),o?c=[o,l]:c=l;break}case"hexAlpha":{let l;/^transparent$/i.test(t)?l="#00000000":l=(0,e.convertRgbToHex)([s,i,n,x]),o?c=[o,l]:c=l;break}default:{let l;x===1?l=`rgb(${Math.round(s)}, ${Math.round(i)}, ${Math.round(n)})`:l=`rgba(${Math.round(s)}, ${Math.round(i)}, ${Math.round(n)}, ${x})`,o?c=[o,l]:c=l}}return c},d=(t,a={})=>{if((0,h.isString)(t)){if(t=t.trim(),t.startsWith("color-mix("))throw new Error("color-mix() is not supported.")}else throw new TypeError(`Expected String but got ${(0,h.getType)(t)}.`);const{d50:r}=a;let y;return t.startsWith("color(")?y=(0,e.parseColorFunc)(t,r):y=(0,e.parseColorValue)(t,r),y},m={xyzD50ToLab:e.convertXyzD50ToLab,xyzD50ToLch:e.convertXyzD50ToLch,xyzToHex:e.convertXyzToHex,xyzToHsl:e.convertXyzToHsl,xyzToHwb:e.convertXyzToHwb,xyzToOklab:e.convertXyzToOklab,xyzToOklch:e.convertXyzToOklch,xyzToRgb:e.convertXyzToRgb,xyzToXyzD50:e.convertXyzToXyzD50};0&&(module.exports={convert,parse,resolve});
//# sourceMappingURL=index.js.map
