{
  "version": 3,
  "sources": ["../../../src/js/color.js"],
  "sourcesContent": ["/**\n * color.js\n *\n * Ref: CSS Color Module Level 4\n *      \u00A717. Sample code for Color Conversions\n *      https://w3c.github.io/csswg-drafts/css-color-4/#color-conversion-code\n */\n\nimport { getType, isString } from './common.js';\n\n/* constants */\nconst HALF = 0.5;\nconst DUO = 2;\nconst TRIA = 3;\nconst QUAT = 4;\nconst DEC = 10;\nconst HEX = 16;\nconst DEG = 360;\nconst DEG_INTERVAL = 60;\nconst MAX_PCT = 100;\nconst MAX_RGB = 255;\nconst POW_SQUARE = 2;\nconst POW_CUBE = 3;\nconst POW_LINEAR = 2.4;\nconst LINEAR_COEF = 12.92;\nconst LINEAR_OFFSET = 0.055;\nconst LAB_L = 116;\nconst LAB_A = 500;\nconst LAB_B = 200;\nconst LAB_EPSILON = 216 / 24389;\nconst LAB_KAPPA = 24389 / 27;\n\n/* white point */\nconst D50 = [0.3457 / 0.3585, 1, (1 - 0.3457 - 0.3585) / 0.3585];\nconst MATRIX_D50_TO_D65 = [\n  [0.9554734527042182, -0.023098536874261423, 0.0632593086610217],\n  [-0.028369706963208136, 1.0099954580058226, 0.021041398966943008],\n  [0.012314001688319899, -0.020507696433477912, 1.3303659366080753]\n];\nconst MATRIX_D65_TO_D50 = [\n  [1.0479298208405488, 0.022946793341019088, -0.05019222954313557],\n  [0.029627815688159344, 0.990434484573249, -0.01707382502938514],\n  [-0.009243058152591178, 0.015055144896577895, 0.7518742899580008]\n];\n\n/* color space */\nconst MATRIX_RGB_TO_XYZ = [\n  [506752 / 1228815, 87881 / 245763, 12673 / 70218],\n  [87098 / 409605, 175762 / 245763, 12673 / 175545],\n  [7918 / 409605, 87881 / 737289, 1001167 / 1053270]\n];\nconst MATRIX_XYZ_TO_RGB = [\n  [12831 / 3959, -329 / 214, -1974 / 3959],\n  [-851781 / 878810, 1648619 / 878810, 36519 / 878810],\n  [705 / 12673, -2585 / 12673, 705 / 667]\n];\nconst MATRIX_XYZ_TO_LMS = [\n  [0.8190224432164319, 0.3619062562801221, -0.12887378261216414],\n  [0.0329836671980271, 0.9292868468965546, 0.03614466816999844],\n  [0.048177199566046255, 0.26423952494422764, 0.6335478258136937]\n];\nconst MATRIX_LMS_TO_XYZ = [\n  [1.2268798733741557, -0.5578149965554813, 0.28139105017721583],\n  [-0.04057576262431372, 1.1122868293970594, -0.07171106666151701],\n  [-0.07637294974672142, -0.4214933239627914, 1.5869240244272418]\n];\nconst MATRIX_OKLAB_TO_LMS = [\n  [0.9999999984505196, 0.39633779217376774, 0.2158037580607588],\n  [1.0000000088817607, -0.10556134232365633, -0.0638541747717059],\n  [1.0000000546724108, -0.08948418209496574, -1.2914855378640917]\n];\nconst MATRIX_LMS_TO_OKLAB = [\n  [0.2104542553, 0.7936177850, -0.0040720468],\n  [1.9779984951, -2.4285922050, 0.4505937099],\n  [0.0259040371, 0.7827717662, -0.8086757660]\n];\nconst MATRIX_P3_TO_XYZ = [\n  [608311 / 1250200, 189793 / 714400, 198249 / 1000160],\n  [35783 / 156275, 247089 / 357200, 198249 / 2500400],\n  [0, 32229 / 714400, 5220557 / 5000800]\n];\nconst MATRIX_REC2020_TO_XYZ = [\n  [63426534 / 99577255, 20160776 / 139408157, 47086771 / 278816314],\n  [26158966 / 99577255, 472592308 / 697040785, 8267143 / 139408157],\n  [0, 19567812 / 697040785, 295819943 / 278816314]\n];\nconst MATRIX_A98_TO_XYZ = [\n  [573536 / 994567, 263643 / 1420810, 187206 / 994567],\n  [591459 / 1989134, 6239551 / 9945670, 374412 / 4972835],\n  [53769 / 1989134, 351524 / 4972835, 4929758 / 4972835]\n];\nconst MATRIX_PROPHOTO_TO_XYZ_D50 = [\n  [0.7977604896723027, 0.13518583717574031, 0.0313493495815248],\n  [0.2880711282292934, 0.7118432178101014, 0.00008565396060525902],\n  [0, 0, 0.8251046025104601]\n];\n\n/* regexp */\nconst NONE = 'none';\nconst REG_ANGLE = 'deg|g?rad|turn';\nconst REG_SRGB = 'srgb(?:-linear)?';\nconst REG_COLOR_SPACE_XYZ = 'xyz(?:-d(?:50|65))?';\nconst REG_COLOR_SPACE_COLOR_MIX =\n  `(?:ok)?l(?:ab|ch)|h(?:sl|wb)|${REG_SRGB}|${REG_COLOR_SPACE_XYZ}`;\nconst REG_COLOR_SPACE_RGB =\n  `(?:a98|prophoto)-rgb|display-p3|rec2020|${REG_SRGB}`;\nconst REG_NUM =\n  '[+-]?(?:(?:0|[1-9]\\\\d*)(?:\\\\.\\\\d*)?|\\\\.\\\\d+)(?:e-?(?:0|[1-9]\\\\d*))?';\nconst REG_PCT = `${REG_NUM}%`;\nconst REG_HSL_HWB = `(?:${REG_NUM}(?:${REG_ANGLE})?|${NONE})(?:\\\\s+(?:${REG_PCT}|${NONE})){2}(?:\\\\s*\\\\/\\\\s*(?:${REG_NUM}|${REG_PCT}|${NONE}))?`;\nconst REG_HSL_LV3 = `${REG_NUM}(?:${REG_ANGLE})?(?:\\\\s*,\\\\s*${REG_PCT}){2}(?:\\\\s*,\\\\s*(?:${REG_NUM}|${REG_PCT}))?`;\nconst REG_RGB = `(?:(?:${REG_NUM}|${NONE})(?:\\\\s+(?:${REG_NUM}|${NONE})){2}|(?:${REG_PCT}|${NONE})(?:\\\\s+(?:${REG_PCT}|${NONE})){2})(?:\\\\s*\\\\/\\\\s*(?:${REG_NUM}|${REG_PCT}|${NONE}))?`;\nconst REG_RGB_LV3 = `(?:${REG_NUM}(?:\\\\s*,\\\\s*${REG_NUM}){2}|${REG_PCT}(?:\\\\s*,\\\\s*${REG_PCT}){2})(?:\\\\s*,\\\\s*(?:${REG_NUM}|${REG_PCT}))?`;\nconst REG_LAB = `(?:${REG_NUM}|${REG_PCT}|${NONE})(?:\\\\s+(?:${REG_NUM}|${REG_PCT}|${NONE})){2}(?:\\\\s*\\\\/\\\\s*(?:${REG_NUM}|${REG_PCT}|${NONE}))?`;\nconst REG_LCH = `(?:(?:${REG_NUM}|${REG_PCT}|${NONE})\\\\s+){2}(?:${REG_NUM}(?:${REG_ANGLE})?|${NONE})(?:\\\\s*\\\\/\\\\s*(?:${REG_NUM}|${REG_PCT}|${NONE}))?`;\nconst REG_COLOR_FUNC = `(?:${REG_COLOR_SPACE_RGB}|${REG_COLOR_SPACE_XYZ})(?:\\\\s+(?:${REG_NUM}|${REG_PCT}|${NONE})){3}(?:\\\\s*\\\\/\\\\s*(?:${REG_NUM}|${REG_PCT}|${NONE}))?`;\nconst REG_COLOR_TYPE = `[a-z]+|#(?:[\\\\da-f]{3}|[\\\\da-f]{4}|[\\\\da-f]{6}|[\\\\da-f]{8})|hsla?\\\\(\\\\s*(?:${REG_HSL_HWB}|${REG_HSL_LV3})\\\\s*\\\\)|hwb\\\\(\\\\s*${REG_HSL_HWB}\\\\s*\\\\)|rgba?\\\\(\\\\s*(?:${REG_RGB}|${REG_RGB_LV3})\\\\s*\\\\)|(?:ok)?lab\\\\(\\\\s*${REG_LAB}\\\\s*\\\\)|(?:ok)?lch\\\\(\\\\s*${REG_LCH}\\\\s*\\\\)|color\\\\(\\\\s*${REG_COLOR_FUNC}\\\\s*\\\\)`;\nconst REG_COLOR_MIX_PART = `(?:${REG_COLOR_TYPE})(?:\\\\s+${REG_PCT})?`;\nconst REG_COLOR_MIX_CAPT = `color-mix\\\\(\\\\s*in\\\\s+(${REG_COLOR_SPACE_COLOR_MIX})\\\\s*,\\\\s*(${REG_COLOR_MIX_PART})\\\\s*,\\\\s*(${REG_COLOR_MIX_PART})\\\\s*\\\\)`;\nconst REG_CURRENT_COLOR = /^currentColor$/i;\n\n/* named colors */\nconst NAMED_COLORS = {\n  aliceblue: [0xF0, 0xF8, 0xFF],\n  antiquewhite: [0xFA, 0xEB, 0xD7],\n  aqua: [0x00, 0xFF, 0xFF],\n  aquamarine: [0x7F, 0xFF, 0xD4],\n  azure: [0xF0, 0xFF, 0xFF],\n  beige: [0xF5, 0xF5, 0xDC],\n  bisque: [0xFF, 0xE4, 0xC4],\n  black: [0x00, 0x00, 0x00],\n  blanchedalmond: [0xFF, 0xEB, 0xCD],\n  blue: [0x00, 0x00, 0xFF],\n  blueviolet: [0x8A, 0x2B, 0xE2],\n  brown: [0xA5, 0x2A, 0x2A],\n  burlywood: [0xDE, 0xB8, 0x87],\n  cadetblue: [0x5F, 0x9E, 0xA0],\n  chartreuse: [0x7F, 0xFF, 0x00],\n  chocolate: [0xD2, 0x69, 0x1E],\n  coral: [0xFF, 0x7F, 0x50],\n  cornflowerblue: [0x64, 0x95, 0xED],\n  cornsilk: [0xFF, 0xF8, 0xDC],\n  crimson: [0xDC, 0x14, 0x3C],\n  cyan: [0x00, 0xFF, 0xFF],\n  darkblue: [0x00, 0x00, 0x8B],\n  darkcyan: [0x00, 0x8B, 0x8B],\n  darkgoldenrod: [0xB8, 0x86, 0x0B],\n  darkgray: [0xA9, 0xA9, 0xA9],\n  darkgreen: [0x00, 0x64, 0x00],\n  darkgrey: [0xA9, 0xA9, 0xA9],\n  darkkhaki: [0xBD, 0xB7, 0x6B],\n  darkmagenta: [0x8B, 0x00, 0x8B],\n  darkolivegreen: [0x55, 0x6B, 0x2F],\n  darkorange: [0xFF, 0x8C, 0x00],\n  darkorchid: [0x99, 0x32, 0xCC],\n  darkred: [0x8B, 0x00, 0x00],\n  darksalmon: [0xE9, 0x96, 0x7A],\n  darkseagreen: [0x8F, 0xBC, 0x8F],\n  darkslateblue: [0x48, 0x3D, 0x8B],\n  darkslategray: [0x2F, 0x4F, 0x4F],\n  darkslategrey: [0x2F, 0x4F, 0x4F],\n  darkturquoise: [0x00, 0xCE, 0xD1],\n  darkviolet: [0x94, 0x00, 0xD3],\n  deeppink: [0xFF, 0x14, 0x93],\n  deepskyblue: [0x00, 0xBF, 0xFF],\n  dimgray: [0x69, 0x69, 0x69],\n  dimgrey: [0x69, 0x69, 0x69],\n  dodgerblue: [0x1E, 0x90, 0xFF],\n  firebrick: [0xB2, 0x22, 0x22],\n  floralwhite: [0xFF, 0xFA, 0xF0],\n  forestgreen: [0x22, 0x8B, 0x22],\n  fuchsia: [0xFF, 0x00, 0xFF],\n  gainsboro: [0xDC, 0xDC, 0xDC],\n  ghostwhite: [0xF8, 0xF8, 0xFF],\n  gold: [0xFF, 0xD7, 0x00],\n  goldenrod: [0xDA, 0xA5, 0x20],\n  gray: [0x80, 0x80, 0x80],\n  green: [0x00, 0x80, 0x00],\n  greenyellow: [0xAD, 0xFF, 0x2F],\n  grey: [0x80, 0x80, 0x80],\n  honeydew: [0xF0, 0xFF, 0xF0],\n  hotpink: [0xFF, 0x69, 0xB4],\n  indianred: [0xCD, 0x5C, 0x5C],\n  indigo: [0x4B, 0x00, 0x82],\n  ivory: [0xFF, 0xFF, 0xF0],\n  khaki: [0xF0, 0xE6, 0x8C],\n  lavender: [0xE6, 0xE6, 0xFA],\n  lavenderblush: [0xFF, 0xF0, 0xF5],\n  lawngreen: [0x7C, 0xFC, 0x00],\n  lemonchiffon: [0xFF, 0xFA, 0xCD],\n  lightblue: [0xAD, 0xD8, 0xE6],\n  lightcoral: [0xF0, 0x80, 0x80],\n  lightcyan: [0xE0, 0xFF, 0xFF],\n  lightgoldenrodyellow: [0xFA, 0xFA, 0xD2],\n  lightgray: [0xD3, 0xD3, 0xD3],\n  lightgreen: [0x90, 0xEE, 0x90],\n  lightgrey: [0xD3, 0xD3, 0xD3],\n  lightpink: [0xFF, 0xB6, 0xC1],\n  lightsalmon: [0xFF, 0xA0, 0x7A],\n  lightseagreen: [0x20, 0xB2, 0xAA],\n  lightskyblue: [0x87, 0xCE, 0xFA],\n  lightslategray: [0x77, 0x88, 0x99],\n  lightslategrey: [0x77, 0x88, 0x99],\n  lightsteelblue: [0xB0, 0xC4, 0xDE],\n  lightyellow: [0xFF, 0xFF, 0xE0],\n  lime: [0x00, 0xFF, 0x00],\n  limegreen: [0x32, 0xCD, 0x32],\n  linen: [0xFA, 0xF0, 0xE6],\n  magenta: [0xFF, 0x00, 0xFF],\n  maroon: [0x80, 0x00, 0x00],\n  mediumaquamarine: [0x66, 0xCD, 0xAA],\n  mediumblue: [0x00, 0x00, 0xCD],\n  mediumorchid: [0xBA, 0x55, 0xD3],\n  mediumpurple: [0x93, 0x70, 0xDB],\n  mediumseagreen: [0x3C, 0xB3, 0x71],\n  mediumslateblue: [0x7B, 0x68, 0xEE],\n  mediumspringgreen: [0x00, 0xFA, 0x9A],\n  mediumturquoise: [0x48, 0xD1, 0xCC],\n  mediumvioletred: [0xC7, 0x15, 0x85],\n  midnightblue: [0x19, 0x19, 0x70],\n  mintcream: [0xF5, 0xFF, 0xFA],\n  mistyrose: [0xFF, 0xE4, 0xE1],\n  moccasin: [0xFF, 0xE4, 0xB5],\n  navajowhite: [0xFF, 0xDE, 0xAD],\n  navy: [0x00, 0x00, 0x80],\n  oldlace: [0xFD, 0xF5, 0xE6],\n  olive: [0x80, 0x80, 0x00],\n  olivedrab: [0x6B, 0x8E, 0x23],\n  orange: [0xFF, 0xA5, 0x00],\n  orangered: [0xFF, 0x45, 0x00],\n  orchid: [0xDA, 0x70, 0xD6],\n  palegoldenrod: [0xEE, 0xE8, 0xAA],\n  palegreen: [0x98, 0xFB, 0x98],\n  paleturquoise: [0xAF, 0xEE, 0xEE],\n  palevioletred: [0xDB, 0x70, 0x93],\n  papayawhip: [0xFF, 0xEF, 0xD5],\n  peachpuff: [0xFF, 0xDA, 0xB9],\n  peru: [0xCD, 0x85, 0x3F],\n  pink: [0xFF, 0xC0, 0xCB],\n  plum: [0xDD, 0xA0, 0xDD],\n  powderblue: [0xB0, 0xE0, 0xE6],\n  purple: [0x80, 0x00, 0x80],\n  rebeccapurple: [0x66, 0x33, 0x99],\n  red: [0xFF, 0x00, 0x00],\n  rosybrown: [0xBC, 0x8F, 0x8F],\n  royalblue: [0x41, 0x69, 0xE1],\n  saddlebrown: [0x8B, 0x45, 0x13],\n  salmon: [0xFA, 0x80, 0x72],\n  sandybrown: [0xF4, 0xA4, 0x60],\n  seagreen: [0x2E, 0x8B, 0x57],\n  seashell: [0xFF, 0xF5, 0xEE],\n  sienna: [0xA0, 0x52, 0x2D],\n  silver: [0xC0, 0xC0, 0xC0],\n  skyblue: [0x87, 0xCE, 0xEB],\n  slateblue: [0x6A, 0x5A, 0xCD],\n  slategray: [0x70, 0x80, 0x90],\n  slategrey: [0x70, 0x80, 0x90],\n  snow: [0xFF, 0xFA, 0xFA],\n  springgreen: [0x00, 0xFF, 0x7F],\n  steelblue: [0x46, 0x82, 0xB4],\n  tan: [0xD2, 0xB4, 0x8C],\n  teal: [0x00, 0x80, 0x80],\n  thistle: [0xD8, 0xBF, 0xD8],\n  tomato: [0xFF, 0x63, 0x47],\n  turquoise: [0x40, 0xE0, 0xD0],\n  violet: [0xEE, 0x82, 0xEE],\n  wheat: [0xF5, 0xDE, 0xB3],\n  white: [0xFF, 0xFF, 0xFF],\n  whitesmoke: [0xF5, 0xF5, 0xF5],\n  yellow: [0xFF, 0xFF, 0x00],\n  yellowgreen: [0x9A, 0xCD, 0x32]\n};\n\n/**\n * validate color components\n * @param {Array} arr - array of color components\n * @param {object} [opt] - options\n * @param {boolean} [opt.alpha] - alpha\n * @param {number} [opt.minLength] - min length\n * @param {number} [opt.maxLength] - max length\n * @param {number} [opt.minRange] - min range\n * @param {number} [opt.maxRange] - max range\n * @param {boolean} [opt.validateRange] - validate range\n * @returns {Array} - arr;\n */\nexport const validateColorComponents = (arr, opt = {}) => {\n  if (!Array.isArray(arr)) {\n    throw new TypeError(`Expected Array but got ${getType(arr)}.`);\n  }\n  const {\n    alpha = false,\n    minLength = TRIA,\n    maxLength = QUAT,\n    minRange = 0,\n    maxRange = 1,\n    validateRange = true\n  } = opt;\n  if (typeof minLength !== 'number') {\n    throw new TypeError(`Expected Number but got ${getType(minLength)}.`);\n  } else if (Number.isNaN(minLength)) {\n    throw new TypeError(`${minLength} is not a number.`);\n  }\n  if (typeof maxLength !== 'number') {\n    throw new TypeError(`Expected Number but got ${getType(maxLength)}.`);\n  } else if (Number.isNaN(maxLength)) {\n    throw new TypeError(`${maxLength} is not a number.`);\n  }\n  if (typeof minRange !== 'number') {\n    throw new TypeError(`Expected Number but got ${getType(minRange)}.`);\n  } else if (Number.isNaN(minRange)) {\n    throw new TypeError(`${minRange} is not a number.`);\n  }\n  if (typeof maxRange !== 'number') {\n    throw new TypeError(`Expected Number but got ${getType(maxRange)}.`);\n  } else if (Number.isNaN(maxRange)) {\n    throw new TypeError(`${maxRange} is not a number.`);\n  }\n  const l = arr.length;\n  if (l < minLength || l > maxLength) {\n    let msg;\n    if (minLength === maxLength) {\n      msg = `Expected array length of ${maxLength} but got ${l}.`;\n    } else {\n      msg =\n        `Expected array length of ${minLength} or ${maxLength} but got ${l}.`;\n    }\n    throw new Error(msg);\n  }\n  let i = 0;\n  while (i < l) {\n    const v = arr[i];\n    if (typeof v !== 'number') {\n      throw new TypeError(`Expected Number but got ${getType(v)}.`);\n    } else if (Number.isNaN(v)) {\n      throw new TypeError(`${v} is not a number.`);\n    } else if (i < TRIA && validateRange && (v < minRange || v > maxRange)) {\n      throw new RangeError(`${v} is not between ${minRange} and ${maxRange}.`);\n    } else if (i === TRIA && (v < 0 || v > 1)) {\n      throw new RangeError(`${v} is not between 0 and 1.`);\n    }\n    i++;\n  }\n  if (alpha && l === TRIA) {\n    arr.push(1);\n  }\n  return arr;\n};\n\n/**\n * transform matrix\n * @param {Array.<Array.<number>>} mtx - 3 * 3 matrix\n * @param {Array.<number>} vct - vector\n * @returns {Array.<number>} - [p1, p2, p3]\n */\nexport const transformMatrix = (mtx, vct) => {\n  if (!Array.isArray(mtx)) {\n    throw new TypeError(`Expected Array but got ${getType(mtx)}.`);\n  } else if (mtx.length !== TRIA) {\n    throw new Error(`Expected array length of 3 but got ${mtx.length}.`);\n  } else {\n    for (let i of mtx) {\n      i = validateColorComponents(i, {\n        maxLength: TRIA,\n        validateRange: false\n      });\n    }\n  }\n  const [\n    [r1c1, r1c2, r1c3],\n    [r2c1, r2c2, r2c3],\n    [r3c1, r3c2, r3c3]\n  ] = mtx;\n  const [v1, v2, v3] = validateColorComponents(vct, {\n    maxLength: TRIA,\n    validateRange: false\n  });\n  const p1 = r1c1 * v1 + r1c2 * v2 + r1c3 * v3;\n  const p2 = r2c1 * v1 + r2c2 * v2 + r2c3 * v3;\n  const p3 = r3c1 * v1 + r3c2 * v2 + r3c3 * v3;\n  return [p1, p2, p3];\n};\n\n/**\n * re-insert missing color components\n * @param {string} value - value\n * @param {Array} color - array of color components [r, g, b, a]|[l, c, h, a]\n * @returns {Array<number|string>} - [v1, v2, v3, v4]\n */\nexport const reInsertMissingColorComponents = (value, color = []) => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const [v1, v2, v3, v4] = color;\n  let v1m, v2m, v3m, v4m;\n  if (/none/.test(value)) {\n    const regRgb = new RegExp(`^rgba?\\\\(\\\\s*(${REG_RGB})\\\\s*\\\\)$`);\n    const regColor = new RegExp(`^color\\\\(\\\\s*(${REG_COLOR_FUNC})\\\\s*\\\\)$`);\n    const regHsl = new RegExp(`^h(?:sla?|wb)\\\\(\\\\s*(${REG_HSL_HWB})\\\\s*\\\\)$`);\n    const regLab = new RegExp(`^(?:ok)?lab\\\\(\\\\s*(${REG_LAB})\\\\s*\\\\)$`);\n    const regLch = new RegExp(`^(?:ok)?lch\\\\(\\\\s*(${REG_LCH})\\\\s*\\\\)$`);\n    // rgb()\n    if (regRgb.test(value)) {\n      [v1m, v2m, v3m, v4m] =\n        value.match(regRgb)[1].replace('/', ' ').split(/\\s+/);\n    // color()\n    } else if (regColor.test(value)) {\n      [, v1m, v2m, v3m, v4m] =\n        value.match(regColor)[1].replace('/', ' ').split(/\\s+/);\n    // hsl()\n    } else if (value.startsWith('hsl') && regHsl.test(value)) {\n      [v3m, v2m, v1m, v4m] =\n        value.match(regHsl)[1].replace('/', ' ').split(/\\s+/);\n    // hwb()\n    } else if (value.startsWith('hwb') && regHsl.test(value)) {\n      [v3m, , , v4m] = value.match(regHsl)[1].replace('/', ' ').split(/\\s+/);\n    // lab(), oklab()\n    } else if (regLab.test(value)) {\n      [v1m, , , v4m] = value.match(regLab)[1].replace('/', ' ').split(/\\s+/);\n    // lch(), oklch()\n    } else if (regLch.test(value)) {\n      [v1m, v2m, v3m, v4m] =\n        value.match(regLch)[1].replace('/', ' ').split(/\\s+/);\n    }\n  }\n  return [\n    v1m === NONE ? v1m : v1,\n    v2m === NONE ? v2m : v2,\n    v3m === NONE ? v3m : v3,\n    v4m === NONE ? v4m : v4\n  ];\n};\n\n/**\n * normalize color components\n * @param {Array} colorA - array of color components [v1, v2, v3, v4]\n * @param {Array} colorB - array of color components [v1, v2, v3, v4]\n * @returns {Array.<Array.<number>>} - [colorA, colorB]\n */\nexport const normalizeColorComponents = (colorA, colorB) => {\n  if (!Array.isArray(colorA)) {\n    throw new TypeError(`Expected Array but got ${getType(colorA)}.`);\n  } else if (colorA.length !== QUAT) {\n    throw new Error(`Expected array length of 4 but got ${colorA.length}.`);\n  }\n  if (!Array.isArray(colorB)) {\n    throw new TypeError(`Expected Array but got ${getType(colorB)}.`);\n  } else if (colorB.length !== QUAT) {\n    throw new Error(`Expected array length of 4 but got ${colorB.length}.`);\n  }\n  let i = 0;\n  while (i < QUAT) {\n    if (colorA[i] === NONE && colorB[i] === NONE) {\n      colorA[i] = 0;\n      colorB[i] = 0;\n    } else if (colorA[i] === NONE) {\n      colorA[i] = colorB[i];\n    } else if (colorB[i] === NONE) {\n      colorB[i] = colorA[i];\n    }\n    i++;\n  }\n  colorA = validateColorComponents(colorA, {\n    minLength: QUAT,\n    validateRange: false\n  });\n  colorB = validateColorComponents(colorB, {\n    minLength: QUAT,\n    validateRange: false\n  });\n  return [colorA, colorB];\n};\n\n/**\n * number to hex string\n * @param {number} value - color value\n * @returns {string} - hex string\n */\nexport const numberToHexString = value => {\n  if (typeof value !== 'number') {\n    throw new TypeError(`Expected Number but got ${getType(value)}.`);\n  } else if (Number.isNaN(value)) {\n    throw new TypeError(`${value} is not a number.`);\n  } else {\n    value = Math.round(value);\n    if (value < 0 || value > MAX_RGB) {\n      throw new RangeError(`${value} is not between 0 and ${MAX_RGB}.`);\n    }\n  }\n  let hex = value.toString(HEX);\n  if (hex.length === 1) {\n    hex = `0${hex}`;\n  }\n  return hex;\n};\n\n/**\n * angle to deg\n * @param {string} angle - angle\n * @returns {number} - deg 0..360\n */\nexport const angleToDeg = angle => {\n  if (isString(angle)) {\n    angle = angle.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(angle)}.`);\n  }\n  const GRAD = DEG / 400;\n  const RAD = DEG / (Math.PI * DUO);\n  const reg = new RegExp(`^(${REG_NUM})(${REG_ANGLE})?$`);\n  if (!reg.test(angle)) {\n    throw new Error(`Invalid property value: ${angle}`);\n  }\n  const [, val, unit] = angle.match(reg);\n  const value = val.startsWith('.') ? `0${val}` : val;\n  let deg;\n  switch (unit) {\n    case 'grad':\n      deg = parseFloat(value) * GRAD;\n      break;\n    case 'rad':\n      deg = parseFloat(value) * RAD;\n      break;\n    case 'turn':\n      deg = parseFloat(value) * DEG;\n      break;\n    default:\n      deg = parseFloat(value);\n  }\n  deg %= DEG;\n  if (deg < 0) {\n    deg += DEG;\n  }\n  return deg;\n};\n\n/**\n * convert rgb to linear rgb\n * @param {Array.<number>} rgb - [r, g, b] r|g|b: 0..255\n * @returns {Array.<number>} - [r, g, b] r|g|b: 0..1\n */\nexport const convertRgbToLinearRgb = rgb => {\n  const [rr, gg, bb] = validateColorComponents(rgb, {\n    maxLength: TRIA,\n    maxRange: MAX_RGB\n  });\n  let r = rr / MAX_RGB;\n  let g = gg / MAX_RGB;\n  let b = bb / MAX_RGB;\n  const COND_POW = 0.04045;\n  if (r > COND_POW) {\n    r = Math.pow((r + LINEAR_OFFSET) / (1 + LINEAR_OFFSET), POW_LINEAR);\n  } else {\n    r /= LINEAR_COEF;\n  }\n  if (g > COND_POW) {\n    g = Math.pow((g + LINEAR_OFFSET) / (1 + LINEAR_OFFSET), POW_LINEAR);\n  } else {\n    g /= LINEAR_COEF;\n  }\n  if (b > COND_POW) {\n    b = Math.pow((b + LINEAR_OFFSET) / (1 + LINEAR_OFFSET), POW_LINEAR);\n  } else {\n    b /= LINEAR_COEF;\n  }\n  return [r, g, b];\n};\n\n/**\n * convert rgb to xyz\n * @param {Array.<number>} rgb - [r, g, b, [a]] r|g|b: 0..255 a: 0..1\n * @returns {Array.<number>} - [x, y, z, a] x|y|z|a: 0..1\n */\nexport const convertRgbToXyz = rgb => {\n  const [r, g, b, a] = validateColorComponents(rgb, {\n    alpha: true,\n    maxRange: MAX_RGB\n  });\n  const [rr, gg, bb] = convertRgbToLinearRgb([r, g, b]);\n  const [x, y, z] = transformMatrix(MATRIX_RGB_TO_XYZ, [rr, gg, bb]);\n  return [x, y, z, a];\n};\n\n/**\n * convert rgb to xyz-d50\n * @param {Array.<number>} rgb - [r, g, b, [a]] r|g|b: 0..255 a: 0..1\n * @returns {Array.<number>} - [x, y, z, a] x|y|z|a: 0..1\n */\nexport const convertRgbToXyzD50 = rgb => {\n  const [xx, yy, zz, a] = convertRgbToXyz(rgb);\n  const [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [xx, yy, zz]);\n  return [x, y, z, a];\n};\n\n/**\n * convert rgb to hex color\n * @param {Array.<number>} rgb - [r, g, b, a] r|g|b: 0..255 a: 0..1\n * @returns {string} - hex color;\n */\nexport const convertRgbToHex = rgb => {\n  const [r, g, b, a] = validateColorComponents(rgb, {\n    alpha: true,\n    maxRange: MAX_RGB\n  });\n  const rr = numberToHexString(r);\n  const gg = numberToHexString(g);\n  const bb = numberToHexString(b);\n  const aa = numberToHexString(a * MAX_RGB);\n  let hex;\n  if (aa === 'ff') {\n    hex = `#${rr}${gg}${bb}`;\n  } else {\n    hex = `#${rr}${gg}${bb}${aa}`;\n  }\n  return hex;\n};\n\n/**\n * convert linear rgb to rgb\n * @param {Array.<number>} rgb - [r, g, b] r|g|b: 0..1\n * @returns {Array.<number>} - [r, g, b] r|g|b: 0..255\n */\nexport const convertLinearRgbToRgb = rgb => {\n  let [r, g, b] = validateColorComponents(rgb, {\n    maxLength: TRIA\n  });\n  const COND_POW = 809 / 258400;\n  if (r > COND_POW) {\n    r = Math.pow(r, 1 / POW_LINEAR) * (1 + LINEAR_OFFSET) - LINEAR_OFFSET;\n  } else {\n    r *= LINEAR_COEF;\n  }\n  if (g > COND_POW) {\n    g = Math.pow(g, 1 / POW_LINEAR) * (1 + LINEAR_OFFSET) - LINEAR_OFFSET;\n  } else {\n    g *= LINEAR_COEF;\n  }\n  if (b > COND_POW) {\n    b = Math.pow(b, 1 / POW_LINEAR) * (1 + LINEAR_OFFSET) - LINEAR_OFFSET;\n  } else {\n    b *= LINEAR_COEF;\n  }\n  return [\n    Math.round(r * MAX_RGB),\n    Math.round(g * MAX_RGB),\n    Math.round(b * MAX_RGB)\n  ];\n};\n\n/**\n * convert linear rgb to hex color\n * @param {Array.<number>} rgb - [r, g, b, a] r|g|b|a: 0..1\n * @returns {string} - hex color\n */\nexport const convertLinearRgbToHex = rgb => {\n  let [r, g, b, a] = validateColorComponents(rgb, {\n    minLength: QUAT\n  });\n  [r, g, b] = convertLinearRgbToRgb([r, g, b]);\n  const rr = numberToHexString(r);\n  const gg = numberToHexString(g);\n  const bb = numberToHexString(b);\n  const aa = numberToHexString(a * MAX_RGB);\n  let hex;\n  if (aa === 'ff') {\n    hex = `#${rr}${gg}${bb}`;\n  } else {\n    hex = `#${rr}${gg}${bb}${aa}`;\n  }\n  return hex;\n};\n\n/**\n * convert xyz to hex color\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {string} - hex color\n */\nexport const convertXyzToHex = xyz => {\n  const [x, y, z, a] = validateColorComponents(xyz, {\n    minLength: QUAT,\n    validateRange: false\n  });\n  const [r, g, b] = transformMatrix(MATRIX_XYZ_TO_RGB, [x, y, z]);\n  const hex = convertLinearRgbToHex([\n    Math.min(Math.max(r, 0), 1),\n    Math.min(Math.max(g, 0), 1),\n    Math.min(Math.max(b, 0), 1),\n    a\n  ]);\n  return hex;\n};\n\n/**\n * convert xyz D50 to hex color\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {string} - hex color\n */\nexport const convertXyzD50ToHex = xyz => {\n  const [x, y, z, a] = validateColorComponents(xyz, {\n    minLength: QUAT,\n    validateRange: false\n  });\n  const xyzD65 = transformMatrix(MATRIX_D50_TO_D65, [x, y, z]);\n  const [r, g, b] = transformMatrix(MATRIX_XYZ_TO_RGB, xyzD65);\n  const hex = convertLinearRgbToHex([\n    Math.min(Math.max(r, 0), 1),\n    Math.min(Math.max(g, 0), 1),\n    Math.min(Math.max(b, 0), 1),\n    a\n  ]);\n  return hex;\n};\n\n/**\n * convert xyz to rgb\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {Array.<number>} - [r, g, b, a] r|g|b: 0..255 a: 0..1\n */\nexport const convertXyzToRgb = xyz => {\n  const [x, y, z, a] = validateColorComponents(xyz, {\n    validateRange: false\n  });\n  let [r, g, b] = transformMatrix(MATRIX_XYZ_TO_RGB, [x, y, z]);\n  [r, g, b] = convertLinearRgbToRgb([\n    Math.min(Math.max(r, 0), 1),\n    Math.min(Math.max(g, 0), 1),\n    Math.min(Math.max(b, 0), 1)\n  ]);\n  return [r, g, b, a];\n};\n\n/**\n * convert xyz to xyz-d50\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n */\nexport const convertXyzToXyzD50 = xyz => {\n  const [xx, yy, zz, a] = validateColorComponents(xyz, {\n    validateRange: false\n  });\n  const [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [xx, yy, zz]);\n  return [x, y, z, a];\n};\n\n/**\n * convert xyz to hsl\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {Array.<number>} - [h, s, l, a] h: 0..360 s|l: 0..100 a: 0..1\n */\nexport const convertXyzToHsl = xyz => {\n  const [rr, gg, bb, a] = convertXyzToRgb(xyz);\n  const r = rr / MAX_RGB;\n  const g = gg / MAX_RGB;\n  const b = bb / MAX_RGB;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const d = max - min;\n  const l = (max + min) * HALF * MAX_PCT;\n  let h, s;\n  if (Math.round(l) === 0 || Math.round(l) === MAX_PCT) {\n    h = NONE;\n    s = NONE;\n  } else {\n    s = d / (1 - Math.abs(max + min - 1)) * MAX_PCT;\n    if (s === 0) {\n      h = NONE;\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d;\n          break;\n        case g:\n          h = (b - r) / d + DUO;\n          break;\n        case b:\n        default:\n          h = (r - g) / d + QUAT;\n          break;\n      }\n      h = h * DEG_INTERVAL % DEG;\n      if (h < 0) {\n        h += DEG;\n      }\n    }\n  }\n  return [h, s, l, a];\n};\n\n/**\n * convert xyz to hwb\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {Array.<number>} - [h, w, b, a] h: 0..360 w|b: 0..100 a: 0..1\n */\nexport const convertXyzToHwb = xyz => {\n  const [r, g, b, a] = convertXyzToRgb(xyz);\n  const w = Math.min(r, g, b) / MAX_RGB;\n  const bk = 1 - Math.max(r, g, b) / MAX_RGB;\n  let h;\n  if (w + bk === 1) {\n    h = NONE;\n  } else {\n    [h] = convertXyzToHsl(xyz);\n  }\n  return [\n    h,\n    w * MAX_PCT,\n    bk * MAX_PCT,\n    a\n  ];\n};\n\n/**\n * convert xyz to oklab\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {Array.<number>} - [l, a, b, aa] l|aa: 0..1 a|b: -0.4..0.4\n */\nexport const convertXyzToOklab = xyz => {\n  const [x, y, z, aa] = validateColorComponents(xyz, {\n    validateRange: false\n  });\n  const lms = transformMatrix(MATRIX_XYZ_TO_LMS, [x, y, z]);\n  const xyzLms = lms.map(c => Math.cbrt(c));\n  let [l, a, b] = transformMatrix(MATRIX_LMS_TO_OKLAB, xyzLms);\n  l = Math.min(Math.max(l, 0), 1);\n  const lPct = Math.round(parseFloat(l.toFixed(QUAT)) * MAX_PCT);\n  if (lPct === 0 || lPct === MAX_PCT) {\n    a = NONE;\n    b = NONE;\n  }\n  return [l, a, b, aa];\n};\n\n/**\n * convert xyz to oklch\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {Array.<number>} - [l, c, h, aa] l|aa: 0..1 c: 0..0.4 h: 0..360\n */\nexport const convertXyzToOklch = xyz => {\n  const [l, a, b, aa] = convertXyzToOklab(xyz);\n  let c, h;\n  const lPct = Math.round(parseFloat(l.toFixed(QUAT)) * MAX_PCT);\n  if (lPct === 0 || lPct === MAX_PCT) {\n    c = NONE;\n    h = NONE;\n  } else {\n    c =\n      Math.max(Math.sqrt(Math.pow(a, POW_SQUARE) + Math.pow(b, POW_SQUARE)), 0);\n    if (parseFloat(c.toFixed(QUAT)) === 0) {\n      h = NONE;\n    } else {\n      h = Math.atan2(b, a) * DEG * HALF / Math.PI;\n      if (h < 0) {\n        h += DEG;\n      }\n    }\n  }\n  return [l, c, h, aa];\n};\n\n/**\n * convert xyz D50 to rgb\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {Array.<number>} - [r, g, b, a] r|g|b: 0..255 a: 0..1\n */\nexport const convertXyzD50ToRgb = xyz => {\n  const [x, y, z, a] = validateColorComponents(xyz, {\n    minLength: QUAT,\n    validateRange: false\n  });\n  const xyzD65 = transformMatrix(MATRIX_D50_TO_D65, [x, y, z]);\n  const [r, g, b] = convertXyzToRgb(xyzD65);\n  return [r, g, b, a];\n};\n\n/**\n * convert xyz-d50 to lab\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {Array.<number>} - [l, a, b, aa] l: 0..100 a|b: -125..125 aa: 0..1\n */\nexport const convertXyzD50ToLab = xyz => {\n  const [x, y, z, aa] = validateColorComponents(xyz, {\n    validateRange: false\n  });\n  const xyzD50 = [x, y, z].map((val, i) => val / D50[i]);\n  const [f0, f1, f2] = xyzD50.map(val => val > LAB_EPSILON\n    ? Math.cbrt(val)\n    : (val * LAB_KAPPA + HEX) / LAB_L\n  );\n  const l = Math.min(Math.max((LAB_L * f1) - HEX, 0), MAX_PCT);\n  let a, b;\n  if (l === 0 || l === MAX_PCT) {\n    a = NONE;\n    b = NONE;\n  } else {\n    a = (f0 - f1) * LAB_A;\n    b = (f1 - f2) * LAB_B;\n  }\n  return [l, a, b, aa];\n};\n\n/**\n * convert xyz-d50 to lch\n * @param {Array.<number>} xyz - [x, y, z, a] x|y|z|a: 0..1\n * @returns {Array.<number>} - [l, c, h, a] l: 0..100 c: 0..150 h: 0..360 a: 0..1\n */\nexport const convertXyzD50ToLch = xyz => {\n  const [l, a, b, aa] = convertXyzD50ToLab(xyz);\n  let c, h;\n  if (l === 0 || l === MAX_PCT) {\n    c = NONE;\n    h = NONE;\n  } else {\n    c =\n      Math.max(Math.sqrt(Math.pow(a, POW_SQUARE) + Math.pow(b, POW_SQUARE)), 0);\n    if (parseFloat(c.toFixed(QUAT)) === 0) {\n      h = NONE;\n    } else {\n      h = Math.atan2(b, a) * DEG * HALF / Math.PI;\n      if (h < 0) {\n        h += DEG;\n      }\n    }\n  }\n  return [l, c, h, aa];\n};\n\n/**\n * convert hex color to rgb\n * @param {string} value - color value\n * @returns {Array.<number>} - [r, g, b, a] r|g|b: 0..255 a: 0..1\n */\nexport const convertHexToRgb = value => {\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  if (!(/^#[\\da-f]{6}$/.test(value) || /^#[\\da-f]{3}$/.test(value) ||\n        /^#[\\da-f]{8}$/.test(value) || /^#[\\da-f]{4}$/.test(value))) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const arr = [];\n  if (/^#[\\da-f]{6}$/.test(value)) {\n    const [, r, g, b] = value.match(/^#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/);\n    arr.push(\n      parseInt(r, HEX),\n      parseInt(g, HEX),\n      parseInt(b, HEX),\n      1\n    );\n  } else if (/^#[\\da-f]{3}$/.test(value)) {\n    const [, r, g, b] = value.match(/^#([\\da-f])([\\da-f])([\\da-f])$/);\n    arr.push(\n      parseInt(`${r}${r}`, HEX),\n      parseInt(`${g}${g}`, HEX),\n      parseInt(`${b}${b}`, HEX),\n      1\n    );\n  } else if (/^#[\\da-f]{8}$/.test(value)) {\n    const [, r, g, b, a] =\n      value.match(/^#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/);\n    arr.push(\n      parseInt(r, HEX),\n      parseInt(g, HEX),\n      parseInt(b, HEX),\n      parseInt(a, HEX) / MAX_RGB\n    );\n  } else if (/^#[\\da-f]{4}$/.test(value)) {\n    const [, r, g, b, a] =\n      value.match(/^#([\\da-f])([\\da-f])([\\da-f])([\\da-f])$/);\n    arr.push(\n      parseInt(`${r}${r}`, HEX),\n      parseInt(`${g}${g}`, HEX),\n      parseInt(`${b}${b}`, HEX),\n      parseInt(`${a}${a}`, HEX) / MAX_RGB\n    );\n  }\n  return arr;\n};\n\n/**\n * convert hex color to linear rgb\n * @param {string} value - color value\n * @returns {Array.<number>} - [r, g, b, a] r|g|b|a: 0..1\n */\nexport const convertHexToLinearRgb = value => {\n  const [rr, gg, bb, a] = convertHexToRgb(value);\n  const [r, g, b] = convertRgbToLinearRgb([rr, gg, bb]);\n  return [r, g, b, a];\n};\n\n/**\n * convert hex color to xyz\n * @param {string} value - color value\n * @returns {Array.<number>} - [x, y, z, a] x|y|z|a: 0..1\n */\nexport const convertHexToXyz = value => {\n  const [r, g, b, a] = convertHexToLinearRgb(value);\n  const [x, y, z] = transformMatrix(MATRIX_RGB_TO_XYZ, [r, g, b]);\n  return [x, y, z, a];\n};\n\n/**\n * parse alpha\n * @param {?string} [a] - alpha value\n * @returns {number} - a: 0..1\n */\nexport const parseAlpha = a => {\n  if (isString(a)) {\n    a = a.trim();\n    if (!a) {\n      a = 1;\n    } else if (a === NONE) {\n      a = 0;\n    } else {\n      if (a.startsWith('.')) {\n        a = `0${a}`;\n      }\n      if (a.endsWith('%')) {\n        a = parseFloat(a) / MAX_PCT;\n      } else {\n        a = parseFloat(a);\n      }\n      if (Number.isNaN(a)) {\n        throw new TypeError(`${a} is not a number.`);\n      }\n      if (a < 0 || a > 1) {\n        a = Math.min(Math.max(a, 0), 1);\n      }\n    }\n  } else {\n    a = 1;\n  }\n  return a;\n};\n\n/**\n * parse rgb()\n * @param {string} value - color value\n * @returns {Array.<number>} - [r, g, b, a] r|g|b: 0..255 a: 0..1\n */\nexport const parseRgb = value => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const reg =\n    new RegExp(`^rgba?\\\\(\\\\s*(${REG_RGB}|${REG_RGB_LV3})\\\\s*\\\\)$`);\n  if (!reg.test(value)) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const [, val] = value.match(reg);\n  let [r, g, b, a] = val.replace(/[,/]/g, ' ').split(/\\s+/);\n  if (r === NONE) {\n    r = 0;\n  } else {\n    if (r.startsWith('.')) {\n      r = `0${r}`;\n    }\n    if (r.endsWith('%')) {\n      r = parseFloat(r) * MAX_RGB / MAX_PCT;\n    } else {\n      r = parseFloat(r);\n    }\n  }\n  if (g === NONE) {\n    g = 0;\n  } else {\n    if (g.startsWith('.')) {\n      g = `0${g}`;\n    }\n    if (g.endsWith('%')) {\n      g = parseFloat(g) * MAX_RGB / MAX_PCT;\n    } else {\n      g = parseFloat(g);\n    }\n  }\n  if (b === NONE) {\n    b = 0;\n  } else {\n    if (b.startsWith('.')) {\n      b = `0${b}`;\n    }\n    if (b.endsWith('%')) {\n      b = parseFloat(b) * MAX_RGB / MAX_PCT;\n    } else {\n      b = parseFloat(b);\n    }\n  }\n  a = parseAlpha(a);\n  return [\n    Math.min(Math.max(r, 0), MAX_RGB),\n    Math.min(Math.max(g, 0), MAX_RGB),\n    Math.min(Math.max(b, 0), MAX_RGB),\n    a\n  ];\n};\n\n/**\n * parse hsl()\n * @param {string} value - color value\n * @returns {Array.<number>} - [r, g, b, a] r|g|b: 0..255 a: 0..1\n */\nexport const parseHsl = value => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const reg =\n    new RegExp(`^hsla?\\\\(\\\\s*(${REG_HSL_HWB}|${REG_HSL_LV3})\\\\s*\\\\)$`);\n  if (!reg.test(value)) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const [, val] = value.match(reg);\n  let [h, s, l, a] = val.replace(/[,/]/g, ' ').split(/\\s+/);\n  if (h === NONE) {\n    h = 0;\n  } else {\n    h = angleToDeg(h);\n  }\n  if (s === NONE) {\n    s = 0;\n  } else {\n    if (s.startsWith('.')) {\n      s = `0${s}`;\n    }\n    s = Math.min(Math.max(parseFloat(s), 0), MAX_PCT);\n  }\n  if (l === NONE) {\n    l = 0;\n  } else {\n    if (l.startsWith('.')) {\n      l = `0${l}`;\n    }\n    l = Math.min(Math.max(parseFloat(l), 0), MAX_PCT);\n  }\n  a = parseAlpha(a);\n  let max, min;\n  if (l < MAX_PCT * HALF) {\n    max = (l + l * (s / MAX_PCT)) * MAX_RGB / MAX_PCT;\n    min = (l - l * (s / MAX_PCT)) * MAX_RGB / MAX_PCT;\n  } else {\n    max = (l + (MAX_PCT - l) * (s / MAX_PCT)) * MAX_RGB / MAX_PCT;\n    min = (l - (MAX_PCT - l) * (s / MAX_PCT)) * MAX_RGB / MAX_PCT;\n  }\n  const factor = (max - min) / DEG_INTERVAL;\n  let r, g, b;\n  // < 60\n  if (h >= 0 && h < DEG_INTERVAL) {\n    r = max;\n    g = h * factor + min;\n    b = min;\n  // < 120\n  } else if (h < DEG_INTERVAL * DUO) {\n    r = (DEG_INTERVAL * DUO - h) * factor + min;\n    g = max;\n    b = min;\n  // < 180\n  } else if (h < DEG * HALF) {\n    r = min;\n    g = max;\n    b = (h - DEG_INTERVAL * DUO) * factor + min;\n  // < 240\n  } else if (h < DEG_INTERVAL * QUAT) {\n    r = min;\n    g = (DEG_INTERVAL * QUAT - h) * factor + min;\n    b = max;\n  // < 300\n  } else if (h < DEG - DEG_INTERVAL) {\n    r = (h - (DEG_INTERVAL * QUAT)) * factor + min;\n    g = min;\n    b = max;\n  // < 360\n  } else if (h < DEG) {\n    r = max;\n    g = min;\n    b = (DEG - h) * factor + min;\n  }\n  return [\n    Math.min(Math.max(r, 0), MAX_RGB),\n    Math.min(Math.max(g, 0), MAX_RGB),\n    Math.min(Math.max(b, 0), MAX_RGB),\n    a\n  ];\n};\n\n/**\n * parse hwb()\n * @param {string} value - color value\n * @returns {Array.<number>} - [r, g, b, a] r|g|b: 0..255 a: 0..1\n */\nexport const parseHwb = value => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const reg = new RegExp(`^hwb\\\\(\\\\s*(${REG_HSL_HWB})\\\\s*\\\\)$`);\n  if (!reg.test(value)) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const [, val] = value.match(reg);\n  let [h, w, b, a] = val.replace('/', ' ').split(/\\s+/);\n  if (h === NONE) {\n    h = 0;\n  } else {\n    h = angleToDeg(h);\n  }\n  if (w === NONE) {\n    w = 0;\n  } else {\n    if (w.startsWith('.')) {\n      w = `0${w}`;\n    }\n    w = Math.min(Math.max(parseFloat(w), 0), MAX_PCT) / MAX_PCT;\n  }\n  if (b === NONE) {\n    b = 0;\n  } else {\n    if (b.startsWith('.')) {\n      b = `0${b}`;\n    }\n    b = Math.min(Math.max(parseFloat(b), 0), MAX_PCT) / MAX_PCT;\n  }\n  a = parseAlpha(a);\n  const arr = [];\n  if (w + b >= 1) {\n    const v = (w / (w + b)) * MAX_RGB;\n    arr.push(v, v, v, a);\n  } else {\n    const [rr, gg, bb] = parseHsl(`hsl(${h} 100% 50%)`);\n    const factor = (1 - w - b) / MAX_RGB;\n    arr.push(\n      (rr * factor + w) * MAX_RGB,\n      (gg * factor + w) * MAX_RGB,\n      (bb * factor + w) * MAX_RGB,\n      a\n    );\n  }\n  return arr;\n};\n\n/**\n + parse lab()\n * @param {string} value - color value\n * @returns {Array.<number>} - [x, y, z, a] x|y|z|a: 0..1\n */\nexport const parseLab = value => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const reg = new RegExp(`^lab\\\\(\\\\s*(${REG_LAB})\\\\s*\\\\)$`);\n  if (!reg.test(value)) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const COEF_PCT = 1.25;\n  const COND_POW = 8;\n  const [, val] = value.match(reg);\n  let [l, a, b, aa] = val.replace('/', ' ').split(/\\s+/);\n  if (l === NONE) {\n    l = 0;\n  } else {\n    if (l.startsWith('.')) {\n      l = `0${l}`;\n    }\n    if (l.endsWith('%')) {\n      l = parseFloat(l);\n      if (l > MAX_PCT) {\n        l = MAX_PCT;\n      }\n    } else {\n      l = parseFloat(l);\n    }\n    if (l < 0) {\n      l = 0;\n    }\n  }\n  if (a === NONE) {\n    a = 0;\n  } else {\n    if (a.startsWith('.')) {\n      a = `0${a}`;\n    }\n    if (a.endsWith('%')) {\n      a = parseFloat(a) * COEF_PCT;\n    } else {\n      a = parseFloat(a);\n    }\n  }\n  if (b === NONE) {\n    b = 0;\n  } else {\n    if (b.endsWith('%')) {\n      b = parseFloat(b) * COEF_PCT;\n    } else {\n      b = parseFloat(b);\n    }\n  }\n  aa = parseAlpha(aa);\n  const fl = (l + HEX) / LAB_L;\n  const fa = (a / LAB_A + fl);\n  const fb = (fl - b / LAB_B);\n  const powFl = Math.pow(fl, POW_CUBE);\n  const powFa = Math.pow(fa, POW_CUBE);\n  const powFb = Math.pow(fb, POW_CUBE);\n  const xyz = [\n    powFa > LAB_EPSILON ? powFa : (fa * LAB_L - HEX) / LAB_KAPPA,\n    l > COND_POW ? powFl : l / LAB_KAPPA,\n    powFb > LAB_EPSILON ? powFb : (fb * LAB_L - HEX) / LAB_KAPPA\n  ];\n  const [x, y, z] = xyz.map((val, i) => val * D50[i]);\n  return [x, y, z, aa];\n};\n\n/**\n + parse lch()\n * @param {string} value - color value\n * @returns {Array.<number>} - [x, y, z, a] x|y|z|a: 0..1\n */\nexport const parseLch = value => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const reg = new RegExp(`^lch\\\\(\\\\s*(${REG_LCH})\\\\s*\\\\)$`);\n  if (!reg.test(value)) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const COEF_PCT = 1.5;\n  const [, val] = value.match(reg);\n  let [l, c, h, aa] = val.replace('/', ' ').split(/\\s+/);\n  if (l === NONE) {\n    l = 0;\n  } else {\n    if (l.startsWith('.')) {\n      l = `0${l}`;\n    }\n    l = parseFloat(l);\n    if (l < 0) {\n      l = 0;\n    }\n  }\n  if (c === NONE) {\n    c = 0;\n  } else {\n    if (c.startsWith('.')) {\n      c = `0${c}`;\n    }\n    if (c.endsWith('%')) {\n      c = parseFloat(c) * COEF_PCT;\n    } else {\n      c = parseFloat(c);\n    }\n  }\n  if (h === NONE) {\n    h = 0;\n  } else {\n    h = angleToDeg(h);\n  }\n  aa = parseAlpha(aa);\n  const a = c * Math.cos(h * Math.PI / (DEG * HALF));\n  const b = c * Math.sin(h * Math.PI / (DEG * HALF));\n  const [x, y, z] = parseLab(`lab(${l} ${a} ${b})`);\n  return [x, y, z, aa];\n};\n\n/**\n * parse oklab()\n * @param {string} value - color value\n * @returns {Array.<number>} - [x, y, z, a] x|y|z|a: 0..1\n */\nexport const parseOklab = value => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const reg = new RegExp(`^oklab\\\\(\\\\s*(${REG_LAB})\\\\s*\\\\)$`);\n  if (!reg.test(value)) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const COEF_PCT = 0.4;\n  const [, val] = value.match(reg);\n  let [l, a, b, aa] = val.replace('/', ' ').split(/\\s+/);\n  if (l === NONE) {\n    l = 0;\n  } else {\n    if (l.startsWith('.')) {\n      l = `0${l}`;\n    }\n    if (l.endsWith('%')) {\n      l = parseFloat(l) / MAX_PCT;\n    } else {\n      l = parseFloat(l);\n    }\n    if (l < 0) {\n      l = 0;\n    }\n  }\n  if (a === NONE) {\n    a = 0;\n  } else {\n    if (a.startsWith('.')) {\n      a = `0${a}`;\n    }\n    if (a.endsWith('%')) {\n      a = parseFloat(a) * COEF_PCT / MAX_PCT;\n    } else {\n      a = parseFloat(a);\n    }\n  }\n  if (b === NONE) {\n    b = 0;\n  } else {\n    if (b.endsWith('%')) {\n      b = parseFloat(b) * COEF_PCT / MAX_PCT;\n    } else {\n      b = parseFloat(b);\n    }\n  }\n  aa = parseAlpha(aa);\n  const lms = transformMatrix(MATRIX_OKLAB_TO_LMS, [l, a, b]);\n  const xyzLms = lms.map(c => Math.pow(c, POW_CUBE));\n  const [x, y, z] = transformMatrix(MATRIX_LMS_TO_XYZ, xyzLms);\n  return [x, y, z, aa];\n};\n\n/**\n * parse oklch()\n * @param {string} value - color value\n * @returns {Array.<number>} - [x, y, z, a] x|y|z|a: 0..1\n */\nexport const parseOklch = value => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const reg = new RegExp(`^oklch\\\\(\\\\s*(${REG_LAB})\\\\s*\\\\)$`);\n  if (!reg.test(value)) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const COEF_PCT = 0.4;\n  const [, val] = value.match(reg);\n  let [l, c, h, aa] = val.replace('/', ' ').split(/\\s+/);\n  if (l === NONE) {\n    l = 0;\n  } else {\n    if (l.startsWith('.')) {\n      l = `0${l}`;\n    }\n    if (l.endsWith('%')) {\n      l = parseFloat(l) / MAX_PCT;\n    } else {\n      l = parseFloat(l);\n    }\n    if (l < 0) {\n      l = 0;\n    }\n  }\n  if (c === NONE) {\n    c = 0;\n  } else {\n    if (c.startsWith('.')) {\n      c = `0${c}`;\n    }\n    if (c.endsWith('%')) {\n      c = parseFloat(c) * COEF_PCT / MAX_PCT;\n    } else {\n      c = parseFloat(c);\n    }\n    if (c < 0) {\n      c = 0;\n    }\n  }\n  if (h === NONE) {\n    h = 0;\n  } else {\n    h = angleToDeg(h);\n  }\n  aa = parseAlpha(aa);\n  const a = c * Math.cos(h * Math.PI / (DEG * HALF));\n  const b = c * Math.sin(h * Math.PI / (DEG * HALF));\n  const lms = transformMatrix(MATRIX_OKLAB_TO_LMS, [l, a, b]);\n  const xyzLms = lms.map(cl => Math.pow(cl, POW_CUBE));\n  const [x, y, z] = transformMatrix(MATRIX_LMS_TO_XYZ, xyzLms);\n  return [x, y, z, aa];\n};\n\n/**\n * parse color()\n * @param {string} value - color value\n * @param {boolean} d50 - xyz in d50 white point\n * @returns {Array.<number>} - [x, y, z, a] x|y|z|a: 0..1\n */\nexport const parseColorFunc = (value, d50 = false) => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const reg = new RegExp(`^color\\\\(\\\\s*(${REG_COLOR_FUNC})\\\\s*\\\\)$`);\n  if (!reg.test(value)) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const [, val] = value.match(reg);\n  const [cs, v1, v2, v3, v4] = val.replace('/', ' ').split(/\\s+/);\n  let r, g, b;\n  if (v1 === NONE) {\n    r = 0;\n  } else {\n    let rr;\n    if (v1.startsWith('.')) {\n      rr = `0${v1}`;\n    } else {\n      rr = v1;\n    }\n    r = rr.endsWith('%') ? parseFloat(rr) / MAX_PCT : parseFloat(rr);\n  }\n  if (v2 === NONE) {\n    g = 0;\n  } else {\n    let gg;\n    if (v2.startsWith('.')) {\n      gg = `0${v2}`;\n    } else {\n      gg = v2;\n    }\n    g = gg.endsWith('%') ? parseFloat(gg) / MAX_PCT : parseFloat(gg);\n  }\n  if (v3 === NONE) {\n    b = 0;\n  } else {\n    let bb;\n    if (v3.startsWith('.')) {\n      bb = `0${v3}`;\n    } else {\n      bb = v3;\n    }\n    b = bb.endsWith('%') ? parseFloat(bb) / MAX_PCT : parseFloat(bb);\n  }\n  const a = parseAlpha(v4);\n  let x, y, z;\n  // srgb\n  if (cs === 'srgb') {\n    [x, y, z] = convertRgbToXyz([r * MAX_RGB, g * MAX_RGB, b * MAX_RGB]);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n    }\n  // srgb-linear\n  } else if (cs === 'srgb-linear') {\n    [x, y, z] = transformMatrix(MATRIX_RGB_TO_XYZ, [r, g, b]);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n    }\n  // display-p3\n  } else if (cs === 'display-p3') {\n    const linearRgb = convertRgbToLinearRgb([\n      r * MAX_RGB,\n      g * MAX_RGB,\n      b * MAX_RGB\n    ]);\n    [x, y, z] = transformMatrix(MATRIX_P3_TO_XYZ, linearRgb);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n    }\n  // rec2020\n  } else if (cs === 'rec2020') {\n    const ALPHA = 1.09929682680944;\n    const BETA = 0.018053968510807;\n    const REC_COEF = 0.45;\n    const rgb = [r, g, b].map(c => {\n      let cl;\n      if (c < BETA * REC_COEF * DEC) {\n        cl = c / (REC_COEF * DEC);\n      } else {\n        cl = Math.pow((c + ALPHA - 1) / ALPHA, 1 / REC_COEF);\n      }\n      return cl;\n    });\n    [x, y, z] = transformMatrix(MATRIX_REC2020_TO_XYZ, rgb);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n    }\n  // a98-rgb\n  } else if (cs === 'a98-rgb') {\n    const POW_A98 = 563 / 256;\n    const rgb = [r, g, b].map(c => {\n      const cl = Math.pow(c, POW_A98);\n      return cl;\n    });\n    [x, y, z] = transformMatrix(MATRIX_A98_TO_XYZ, rgb);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n    }\n  // prophoto-rgb\n  } else if (cs === 'prophoto-rgb') {\n    const POW_PROPHOTO = 1.8;\n    const rgb = [r, g, b].map(c => {\n      let cl;\n      if (c > 1 / (HEX * DUO)) {\n        cl = Math.pow(c, POW_PROPHOTO);\n      } else {\n        cl = c / HEX;\n      }\n      return cl;\n    });\n    [x, y, z] = transformMatrix(MATRIX_PROPHOTO_TO_XYZ_D50, rgb);\n    if (!d50) {\n      [x, y, z] = transformMatrix(MATRIX_D50_TO_D65, [x, y, z]);\n    }\n  // xyz, xyz-d50, xyz-d65\n  } else if (/^xyz(?:-d(?:50|65))?$/.test(cs)) {\n    [x, y, z] = [r, g, b];\n    if (cs === 'xyz-d50') {\n      if (!d50) {\n        [x, y, z] = transformMatrix(MATRIX_D50_TO_D65, [x, y, z]);\n      }\n    } else if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n    }\n  }\n  return [x, y, z, a];\n};\n\n/**\n * parse color value\n * @param {string} value - color value\n * @param {boolean} [d50] - xyz in d50 white point\n * @returns {Array.<number>} - [x, y, z, a] x|y|z|a: 0..1\n */\nexport const parseColorValue = (value, d50 = false) => {\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  let x, y, z, a;\n  // complement currentcolor as a missing color\n  if (REG_CURRENT_COLOR.test(value)) {\n    x = 0;\n    y = 0;\n    z = 0;\n    a = 0;\n  // named-color\n  } else if (/^[a-z]+$/.test(value)) {\n    if (Object.prototype.hasOwnProperty.call(NAMED_COLORS, value)) {\n      const [r, g, b] = NAMED_COLORS[value];\n      a = 1;\n      [x, y, z] = convertRgbToXyz([r, g, b]);\n      if (d50) {\n        [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n      }\n    } else if (value === 'transparent') {\n      x = 0;\n      y = 0;\n      z = 0;\n      a = 0;\n    } else {\n      throw new Error(`Invalid property value: ${value}`);\n    }\n  // hex-color\n  } else if (value.startsWith('#')) {\n    let hex;\n    if (/^#[\\da-f]{6}$/.test(value)) {\n      hex = value;\n    } else if (/^#[\\da-f]{3}$/.test(value)) {\n      const [, r, g, b] = value.match(/^#([\\da-f])([\\da-f])([\\da-f])$/);\n      hex = `#${r}${r}${g}${g}${b}${b}`;\n    } else if (/^#[\\da-f]{8}$/.test(value)) {\n      hex = value;\n    } else if (/^#[\\da-f]{4}$/.test(value)) {\n      const [, r, g, b, aa] =\n        value.match(/^#([\\da-f])([\\da-f])([\\da-f])([\\da-f])$/);\n      hex = `#${r}${r}${g}${g}${b}${b}${aa}${aa}`;\n    } else {\n      throw new Error(`Invalid property value: ${value}`);\n    }\n    [x, y, z, a] = convertHexToXyz(hex);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n    }\n  // lab()\n  } else if (value.startsWith('lab')) {\n    [x, y, z, a] = parseLab(value);\n    if (!d50) {\n      [x, y, z] = transformMatrix(MATRIX_D50_TO_D65, [x, y, z]);\n    }\n  // lch()\n  } else if (value.startsWith('lch')) {\n    [x, y, z, a] = parseLch(value);\n    if (!d50) {\n      [x, y, z] = transformMatrix(MATRIX_D50_TO_D65, [x, y, z]);\n    }\n  // oklab()\n  } else if (value.startsWith('oklab')) {\n    [x, y, z, a] = parseOklab(value);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n    }\n  // oklch()\n  } else if (value.startsWith('oklch')) {\n    [x, y, z, a] = parseOklch(value);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n    }\n  } else {\n    let r, g, b;\n    // rgb()\n    if (value.startsWith('rgb')) {\n      [r, g, b, a] = parseRgb(value);\n    // hsl()\n    } else if (value.startsWith('hsl')) {\n      [r, g, b, a] = parseHsl(value);\n    // hwb()\n    } else if (value.startsWith('hwb')) {\n      [r, g, b, a] = parseHwb(value);\n    } else {\n      throw new Error(`Invalid property value: ${value}`);\n    }\n    [x, y, z] = convertRgbToXyz([r, g, b]);\n    if (d50) {\n      [x, y, z] = transformMatrix(MATRIX_D65_TO_D50, [x, y, z]);\n    }\n  }\n  return [x, y, z, a];\n};\n\n/**\n * convert color value to linear rgb\n * @param {string} value - color value\n * @param {object} [opt] - options\n * @returns {Array.<number>} - [r, g, b, a] r|g|b|a: 0..1\n */\nexport const convertColorValueToLinearRgb = (value, opt = {}) => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const { alpha } = opt;\n  let x, y, z, a;\n  if (value.startsWith('color(')) {\n    [x, y, z, a] = parseColorFunc(value);\n  } else {\n    [x, y, z, a] = parseColorValue(value);\n  }\n  let [r, g, b] = transformMatrix(MATRIX_XYZ_TO_RGB, [x, y, z]);\n  r = Math.min(Math.max(r, 0), 1);\n  g = Math.min(Math.max(g, 0), 1);\n  b = Math.min(Math.max(b, 0), 1);\n  const rgb = [r, g, b];\n  if (alpha) {\n    rgb.push(a);\n  } else {\n    rgb.push(1);\n  }\n  return rgb;\n};\n\n/**\n * convert color value to rgb\n * @param {string} value - color value\n * @returns {Array.<number>} - [r, g, b, a] r|g|b: 0..255 a: 0..1\n */\nexport const convertColorValueToRgb = value => {\n  let [r, g, b, a] = convertColorValueToLinearRgb(value, {\n    alpha: true\n  });\n  [r, g, b] = convertLinearRgbToRgb([r, g, b]);\n  return [r, g, b, a];\n};\n\n/**\n * resolve color value\n * @param {string} value - color value\n * @returns {Array.<number>} - [r, g, b, a] r|g|b: 0..255 a: 0..1\n */\nexport const resolveColorValue = value => {\n  if (isString(value)) {\n    value = value.toLowerCase().trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  let r, g, b, a;\n  // complement currentcolor as a missing color\n  if (REG_CURRENT_COLOR.test(value)) {\n    r = 0;\n    g = 0;\n    b = 0;\n    a = 0;\n  // named-color\n  } else if (/^[a-z]+$/i.test(value)) {\n    if (Object.prototype.hasOwnProperty.call(NAMED_COLORS, value)) {\n      [r, g, b] = NAMED_COLORS[value];\n      a = 1;\n    } else if (value === 'transparent') {\n      r = 0;\n      g = 0;\n      b = 0;\n      a = 0;\n    // initial\n    } else {\n      r = 0;\n      g = 0;\n      b = 0;\n      a = 1;\n    }\n  // hex-color\n  } else if (value.startsWith('#')) {\n    [r, g, b, a] = convertHexToRgb(value);\n  // lab(), lch()\n  } else if (/^l(?:ab|ch)/.test(value)) {\n    let x, y, z;\n    if (value.startsWith('lab')) {\n      [x, y, z, a] = parseLab(value);\n    } else {\n      [x, y, z, a] = parseLch(value);\n    }\n    [r, g, b, a] = convertXyzD50ToRgb([x, y, z, a]);\n  // oklab(), oklch()\n  } else if (/^okl(?:ab|ch)/.test(value)) {\n    let x, y, z;\n    if (value.startsWith('oklab')) {\n      [x, y, z, a] = parseOklab(value);\n    } else {\n      [x, y, z, a] = parseOklch(value);\n    }\n    [r, g, b, a] = convertXyzToRgb([x, y, z, a]);\n  // rgb()\n  } else if (value.startsWith('rgb')) {\n    [r, g, b, a] = parseRgb(value);\n  // hsl()\n  } else if (value.startsWith('hsl')) {\n    [r, g, b, a] = parseHsl(value);\n  // hwb()\n  } else if (value.startsWith('hwb')) {\n    [r, g, b, a] = parseHwb(value);\n  }\n  return [\n    Math.round(r),\n    Math.round(g),\n    Math.round(b),\n    a\n  ];\n};\n\n/**\n * resolve color()\n * @param {string} value - color value\n * @returns {Array.<number>} - [r, g, b, a] r|g|b: 0..255 a: 0..1\n */\nexport const resolveColorFunc = value => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const reg = new RegExp(`^color\\\\(\\\\s*${REG_COLOR_FUNC}\\\\s*\\\\)$`);\n  if (!reg.test(value)) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const [x, y, z, a] = parseColorFunc(value);\n  const [r, g, b] = convertXyzToRgb([x, y, z]);\n  return [r, g, b, a];\n};\n\n/**\n * resolve color-mix()\n * @param {string} value - color value\n * @param {object} [opt] - options\n * @returns {Array.<number>} - [r, g, b, a] r|g|b: 0..255 a: 0..1\n */\nexport const resolveColorMix = (value, opt = {}) => {\n  if (isString(value)) {\n    value = value.trim();\n  } else {\n    throw new TypeError(`Expected String but got ${getType(value)}.`);\n  }\n  const regColorMix = new RegExp(`^${REG_COLOR_MIX_CAPT}$`, 'i');\n  if (!regColorMix.test(value)) {\n    throw new Error(`Invalid property value: ${value}`);\n  }\n  const CC_LCH = 'lch(none none none / none)';\n  const CC_RGB = 'rgb(none none none / none)';\n  const regColorPart =\n    new RegExp(`^(${REG_COLOR_TYPE})(?:\\\\s+(${REG_PCT}))?$`, 'i');\n  const regMissingColor = new RegExp(NONE);\n  const [, colorSpace, colorPartA, colorPartB] = value.match(regColorMix);\n  const [, colorA, pctA] = colorPartA.match(regColorPart);\n  const [, colorB, pctB] = colorPartB.match(regColorPart);\n  // normalize percentages and set multipler\n  let pA, pB, m;\n  if (pctA && pctB) {\n    const p1 = parseFloat(pctA) / MAX_PCT;\n    const p2 = parseFloat(pctB) / MAX_PCT;\n    if (p1 < 0 || p1 > 1) {\n      throw new RangeError(`${pctA} is not between 0% and 100%.`);\n    }\n    if (p2 < 0 || p2 > 1) {\n      throw new RangeError(`${pctB} is not between 0% and 100%.`);\n    }\n    const factor = p1 + p2;\n    if (factor === 0) {\n      throw new Error(`Invalid property value: ${value}`);\n    }\n    pA = p1 / factor;\n    pB = p2 / factor;\n    m = factor < 1 ? factor : 1;\n  } else {\n    if (pctA) {\n      pA = parseFloat(pctA) / MAX_PCT;\n      if (pA < 0 || pA > 1) {\n        throw new RangeError(`${pctA} is not between 0% and 100%.`);\n      }\n      pB = 1 - pA;\n    } else if (pctB) {\n      pB = parseFloat(pctB) / MAX_PCT;\n      if (pB < 0 || pB > 1) {\n        throw new RangeError(`${pctB} is not between 0% and 100%.`);\n      }\n      pA = 1 - pB;\n    } else {\n      pA = HALF;\n      pB = HALF;\n    }\n    m = 1;\n  }\n  let r, g, b, a;\n  // in srgb\n  if (colorSpace === 'srgb') {\n    let rgbA = convertColorValueToRgb(colorA, {\n      alpha: true\n    });\n    let rgbB = convertColorValueToRgb(colorB, {\n      alpha: true\n    });\n    if (REG_CURRENT_COLOR.test(colorA)) {\n      rgbA = reInsertMissingColorComponents(CC_RGB, rgbA);\n    } else if (regMissingColor.test(colorA)) {\n      rgbA = reInsertMissingColorComponents(colorA, rgbA);\n    }\n    if (REG_CURRENT_COLOR.test(colorB)) {\n      rgbB = reInsertMissingColorComponents(CC_RGB, rgbB);\n    } else if (regMissingColor.test(colorB)) {\n      rgbB = reInsertMissingColorComponents(colorB, rgbB);\n    }\n    const [\n      [rA, gA, bA, aA],\n      [rB, gB, bB, aB]\n    ] = normalizeColorComponents(rgbA, rgbB);\n    const factorA = aA * pA;\n    const factorB = aB * pB;\n    a = (factorA + factorB);\n    if (a === 0) {\n      r = rA * pA + rB * pB;\n      g = gA * pA + gB * pB;\n      b = bA * pA + bB * pB;\n    } else {\n      r = (rA * factorA + rB * factorB) / a;\n      g = (gA * factorA + gB * factorB) / a;\n      b = (bA * factorA + bB * factorB) / a;\n    }\n  // in srgb-linear\n  } else if (colorSpace === 'srgb-linear') {\n    let rgbA = convertColorValueToLinearRgb(colorA, {\n      alpha: true\n    });\n    let rgbB = convertColorValueToLinearRgb(colorB, {\n      alpha: true\n    });\n    if (REG_CURRENT_COLOR.test(colorA)) {\n      rgbA = reInsertMissingColorComponents(CC_RGB, rgbA);\n    } else if (regMissingColor.test(colorA)) {\n      rgbA = reInsertMissingColorComponents(colorA, rgbA);\n    }\n    if (REG_CURRENT_COLOR.test(colorB)) {\n      rgbB = reInsertMissingColorComponents(CC_RGB, rgbB);\n    } else if (regMissingColor.test(colorB)) {\n      rgbB = reInsertMissingColorComponents(colorB, rgbB);\n    }\n    const [\n      [rA, gA, bA, aA],\n      [rB, gB, bB, aB]\n    ] = normalizeColorComponents(rgbA, rgbB);\n    const factorA = aA * pA;\n    const factorB = aB * pB;\n    a = (factorA + factorB);\n    if (a === 0) {\n      r = (rA * pA + rB * pB) * MAX_RGB;\n      g = (gA * pA + gB * pB) * MAX_RGB;\n      b = (bA * pA + bB * pB) * MAX_RGB;\n    } else {\n      r = (rA * factorA + rB * factorB) * a * MAX_RGB;\n      g = (gA * factorA + gB * factorB) * a * MAX_RGB;\n      b = (bA * factorA + bB * factorB) * a * MAX_RGB;\n    }\n  // in xyz, xyz-d65\n  } else if (/^xyz(?:-d65)?$/.test(colorSpace)) {\n    let xyzA, xyzB;\n    if (colorA.startsWith('color(')) {\n      xyzA = parseColorFunc(colorA);\n    } else {\n      xyzA = parseColorValue(colorA);\n    }\n    if (colorB.startsWith('color(')) {\n      xyzB = parseColorFunc(colorB);\n    } else {\n      xyzB = parseColorValue(colorB);\n    }\n    if (REG_CURRENT_COLOR.test(colorA)) {\n      xyzA = reInsertMissingColorComponents(CC_RGB, xyzA);\n    } else if (regMissingColor.test(colorA)) {\n      xyzA = reInsertMissingColorComponents(colorA, xyzA);\n    }\n    if (REG_CURRENT_COLOR.test(colorB)) {\n      xyzB = reInsertMissingColorComponents(CC_RGB, xyzB);\n    } else if (regMissingColor.test(colorB)) {\n      xyzB = reInsertMissingColorComponents(colorB, xyzB);\n    }\n    const [\n      [xA, yA, zA, aA],\n      [xB, yB, zB, aB]\n    ] = normalizeColorComponents(xyzA, xyzB);\n    const factorA = aA * pA;\n    const factorB = aB * pB;\n    a = (factorA + factorB);\n    let x, y, z;\n    if (a === 0) {\n      x = xA * pA + xB * pB;\n      y = yA * pA + yB * pB;\n      z = zA * pA + zB * pB;\n    } else {\n      x = (xA * factorA + xB * factorB) * a;\n      y = (yA * factorA + yB * factorB) * a;\n      z = (zA * factorA + zB * factorB) * a;\n    }\n    [r, g, b] = convertXyzToRgb([x, y, z]);\n  // in xyz-d50\n  } else if (colorSpace === 'xyz-d50') {\n    let xyzA, xyzB;\n    if (colorA.startsWith('color(')) {\n      xyzA = parseColorFunc(colorA, true);\n    } else {\n      xyzA = parseColorValue(colorA, true);\n    }\n    if (colorB.startsWith('color(')) {\n      xyzB = parseColorFunc(colorB, true);\n    } else {\n      xyzB = parseColorValue(colorB, true);\n    }\n    if (REG_CURRENT_COLOR.test(colorA)) {\n      xyzA = reInsertMissingColorComponents(CC_RGB, xyzA);\n    } else if (regMissingColor.test(colorA)) {\n      xyzA = reInsertMissingColorComponents(colorA, xyzA);\n    }\n    if (REG_CURRENT_COLOR.test(colorB)) {\n      xyzB = reInsertMissingColorComponents(CC_RGB, xyzB);\n    } else if (regMissingColor.test(colorB)) {\n      xyzB = reInsertMissingColorComponents(colorB, xyzB);\n    }\n    const [\n      [xA, yA, zA, aA],\n      [xB, yB, zB, aB]\n    ] = normalizeColorComponents(xyzA, xyzB);\n    const factorA = aA * pA;\n    const factorB = aB * pB;\n    a = (factorA + factorB);\n    let x, y, z;\n    if (a === 0) {\n      x = xA * pA + xB * pB;\n      y = yA * pA + yB * pB;\n      z = zA * pA + zB * pB;\n    } else {\n      x = (xA * factorA + xB * factorB) * a;\n      y = (yA * factorA + yB * factorB) * a;\n      z = (zA * factorA + zB * factorB) * a;\n    }\n    [r, g, b] = convertXyzD50ToRgb([x, y, z, a]);\n  // in hsl\n  } else if (colorSpace === 'hsl') {\n    let hA, sA, lA, aA;\n    if (colorA.startsWith('color(')) {\n      const xyz = parseColorFunc(colorA);\n      [hA, sA, lA, aA] = convertXyzToHsl(xyz);\n    } else {\n      const xyz = parseColorValue(colorA);\n      [hA, sA, lA, aA] = convertXyzToHsl(xyz);\n    }\n    let hB, sB, lB, aB;\n    if (colorB.startsWith('color(')) {\n      const xyz = parseColorFunc(colorB);\n      [hB, sB, lB, aB] = convertXyzToHsl(xyz);\n    } else {\n      const xyz = parseColorValue(colorB);\n      [hB, sB, lB, aB] = convertXyzToHsl(xyz);\n    }\n    if (REG_CURRENT_COLOR.test(colorA)) {\n      [lA, sA, hA, aA] =\n        reInsertMissingColorComponents(CC_LCH, [lA, sA, hA, aA]);\n    } else if (regMissingColor.test(colorA)) {\n      [lA, sA, hA, aA] =\n        reInsertMissingColorComponents(colorA, [lA, sA, hA, aA]);\n    }\n    if (REG_CURRENT_COLOR.test(colorB)) {\n      [lB, sB, hB, aB] =\n        reInsertMissingColorComponents(CC_LCH, [lB, sB, hB, aB]);\n    } else if (regMissingColor.test(colorB)) {\n      [lB, sB, hB, aB] =\n        reInsertMissingColorComponents(colorB, [lB, sB, hB, aB]);\n    }\n    [\n      [hA, sA, lA, aA],\n      [hB, sB, lB, aB]\n    ] = normalizeColorComponents([hA, sA, lA, aA], [hB, sB, lB, aB]);\n    const factorA = aA * pA;\n    const factorB = aB * pB;\n    a = (factorA + factorB);\n    const h = (hA * pA + hB * pB) % DEG;\n    let s, l;\n    if (a === 0) {\n      s = sA * pA + sB * pB;\n      l = lA * pA + lB * pB;\n    } else {\n      s = (sA * factorA + sB * factorB) / a;\n      l = (lA * factorA + lB * factorB) / a;\n    }\n    [r, g, b] = convertColorValueToRgb(`hsl(${h} ${s}% ${l}%)`);\n  // in hwb\n  } else if (colorSpace === 'hwb') {\n    let hA, wA, bA, aA;\n    if (colorA.startsWith('color(')) {\n      const xyz = parseColorFunc(colorA);\n      [hA, wA, bA, aA] = convertXyzToHwb(xyz);\n    } else {\n      const xyz = parseColorValue(colorA);\n      [hA, wA, bA, aA] = convertXyzToHwb(xyz);\n    }\n    let hB, wB, bB, aB;\n    if (colorB.startsWith('color(')) {\n      const xyz = parseColorFunc(colorB);\n      [hB, wB, bB, aB] = convertXyzToHwb(xyz);\n    } else {\n      const xyz = parseColorValue(colorB);\n      [hB, wB, bB, aB] = convertXyzToHwb(xyz);\n    }\n    if (REG_CURRENT_COLOR.test(colorA)) {\n      [,, hA, aA] =\n        reInsertMissingColorComponents(CC_LCH, [null, null, hA, aA]);\n    } else if (regMissingColor.test(colorA)) {\n      [,, hA, aA] =\n        reInsertMissingColorComponents(colorA, [null, null, hA, aA]);\n    }\n    if (REG_CURRENT_COLOR.test(colorB)) {\n      [,, hB, aB] =\n        reInsertMissingColorComponents(CC_LCH, [null, null, hB, aB]);\n    } else if (regMissingColor.test(colorB)) {\n      [,, hB, aB] =\n        reInsertMissingColorComponents(colorB, [null, null, hB, aB]);\n    }\n    [\n      [hA, wA, bA, aA],\n      [hB, wB, bB, aB]\n    ] = normalizeColorComponents([hA, wA, bA, aA], [hB, wB, bB, aB]);\n    const factorA = aA * pA;\n    const factorB = aB * pB;\n    a = (factorA + factorB);\n    const h = (hA * pA + hB * pB) % DEG;\n    let w, bk;\n    if (a === 0) {\n      w = wA * pA + wB * pB;\n      bk = bA * pA + bB * pB;\n    } else {\n      w = (wA * factorA + wB * factorB) / a;\n      bk = (bA * factorA + bB * factorB) / a;\n    }\n    const rgb = convertColorValueToRgb(`hwb(${h} ${w}% ${bk}%)`);\n    [r, g, b] = rgb;\n  // in lab\n  } else if (colorSpace === 'lab') {\n    let lA, aA, bA, aaA;\n    if (colorA.startsWith('color(')) {\n      const xyz = parseColorFunc(colorA, true);\n      [lA, aA, bA, aaA] = convertXyzD50ToLab(xyz);\n    } else {\n      const xyz = parseColorValue(colorA, true);\n      [lA, aA, bA, aaA] = convertXyzD50ToLab(xyz);\n    }\n    let lB, aB, bB, aaB;\n    if (colorB.startsWith('color(')) {\n      const xyz = parseColorFunc(colorB, true);\n      [lB, aB, bB, aaB] = convertXyzD50ToLab(xyz);\n    } else {\n      const xyz = parseColorValue(colorB, true);\n      [lB, aB, bB, aaB] = convertXyzD50ToLab(xyz);\n    }\n    if (REG_CURRENT_COLOR.test(colorA)) {\n      [lA,,, aaA] =\n        reInsertMissingColorComponents(CC_LCH, [lA, null, null, aaA]);\n    } else if (regMissingColor.test(colorA)) {\n      [lA,,, aaA] =\n        reInsertMissingColorComponents(colorA, [lA, null, null, aaA]);\n    }\n    if (REG_CURRENT_COLOR.test(colorB)) {\n      [lB,,, aaB] =\n        reInsertMissingColorComponents(CC_LCH, [lB, null, null, aaB]);\n    } else if (regMissingColor.test(colorB)) {\n      [lB,,, aaB] =\n        reInsertMissingColorComponents(colorB, [lB, null, null, aaB]);\n    }\n    [\n      [lA, aA, bA, aaA],\n      [lB, aB, bB, aaB]\n    ] = normalizeColorComponents([lA, aA, bA, aaA], [lB, aB, bB, aaB]);\n    const factorA = aaA * pA;\n    const factorB = aaB * pB;\n    a = (factorA + factorB);\n    let l, aX, bY;\n    if (a === 0) {\n      l = lA * pA + lB * pB;\n      aX = aA * pA + aB * pB;\n      bY = bA * pA + bB * pB;\n    } else {\n      l = (lA * factorA + lB * factorB) * a;\n      aX = (aA * factorA + aB * factorB) * a;\n      bY = (bA * factorA + bB * factorB) * a;\n    }\n    [r, g, b] = resolveColorValue(`lab(${l} ${aX} ${bY})`);\n  // in lch\n  } else if (colorSpace === 'lch') {\n    let lchA, lchB;\n    if (colorA.startsWith('color(')) {\n      const xyz = parseColorFunc(colorA, true);\n      lchA = convertXyzD50ToLch(xyz);\n    } else {\n      const xyz = parseColorValue(colorA, true);\n      lchA = convertXyzD50ToLch(xyz);\n    }\n    if (colorB.startsWith('color(')) {\n      const xyz = parseColorFunc(colorB, true);\n      lchB = convertXyzD50ToLch(xyz);\n    } else {\n      const xyz = parseColorValue(colorB, true);\n      lchB = convertXyzD50ToLch(xyz);\n    }\n    if (REG_CURRENT_COLOR.test(colorA)) {\n      lchA = reInsertMissingColorComponents(CC_LCH, lchA);\n    } else if (regMissingColor.test(colorA)) {\n      lchA = reInsertMissingColorComponents(colorA, lchA);\n    }\n    if (REG_CURRENT_COLOR.test(colorB)) {\n      lchB = reInsertMissingColorComponents(CC_LCH, lchB);\n    } else if (regMissingColor.test(colorB)) {\n      lchB = reInsertMissingColorComponents(colorB, lchB);\n    }\n    const [\n      [lA, cA, hA, aA],\n      [lB, cB, hB, aB]\n    ] = normalizeColorComponents(lchA, lchB);\n    const factorA = aA * pA;\n    const factorB = aB * pB;\n    a = (factorA + factorB);\n    let l, c, h;\n    if (a === 0) {\n      l = lA * pA + lB * pB;\n      c = cA * pA + cB * pB;\n      h = hA * pA + hB * pB;\n    } else {\n      l = (lA * factorA + lB * factorB) * a;\n      c = (cA * factorA + cB * factorB) * a;\n      h = (hA * factorA + hB * factorB) * a;\n    }\n    [r, g, b] = resolveColorValue(`lch(${l} ${c} ${h})`);\n  // in oklab\n  } else if (colorSpace === 'oklab') {\n    let lA, aA, bA, aaA;\n    if (colorA.startsWith('color(')) {\n      const xyz = parseColorFunc(colorA);\n      [lA, aA, bA, aaA] = convertXyzToOklab(xyz);\n    } else {\n      const xyz = parseColorValue(colorA);\n      [lA, aA, bA, aaA] = convertXyzToOklab(xyz);\n    }\n    let lB, aB, bB, aaB;\n    if (colorB.startsWith('color(')) {\n      const xyz = parseColorFunc(colorB);\n      [lB, aB, bB, aaB] = convertXyzToOklab(xyz);\n    } else {\n      const xyz = parseColorValue(colorB);\n      [lB, aB, bB, aaB] = convertXyzToOklab(xyz);\n    }\n    if (REG_CURRENT_COLOR.test(colorA)) {\n      [lA,,, aaA] =\n        reInsertMissingColorComponents(CC_LCH, [lA, null, null, aaA]);\n    } else if (regMissingColor.test(colorA)) {\n      [lA,,, aaA] =\n        reInsertMissingColorComponents(colorA, [lA, null, null, aaA]);\n    }\n    if (REG_CURRENT_COLOR.test(colorB)) {\n      [lA,,, aaB] =\n        reInsertMissingColorComponents(CC_LCH, [lB, null, null, aaB]);\n    } else if (regMissingColor.test(colorB)) {\n      [lB,,, aaB] =\n        reInsertMissingColorComponents(colorB, [lB, null, null, aaB]);\n    }\n    [\n      [lA, aA, bA, aaA],\n      [lB, aB, bB, aaB]\n    ] = normalizeColorComponents([lA, aA, bA, aaA], [lB, aB, bB, aaB]);\n    const factorA = aaA * pA;\n    const factorB = aaB * pB;\n    a = (factorA + factorB);\n    let l, aX, bY;\n    if (a === 0) {\n      l = lA * pA + lB * pB;\n      aX = aA * pA + aB * pB;\n      bY = bA * pA + bB * pB;\n    } else {\n      l = (lA * factorA + lB * factorB) * a;\n      aX = (aA * factorA + aB * factorB) * a;\n      bY = (bA * factorA + bB * factorB) * a;\n    }\n    [r, g, b] = resolveColorValue(`oklab(${l} ${aX} ${bY})`);\n  // in oklch\n  } else if (colorSpace === 'oklch') {\n    let lchA, lchB;\n    if (colorA.startsWith('color(')) {\n      const xyz = parseColorFunc(colorA, true);\n      lchA = convertXyzToOklch(xyz);\n    } else {\n      const xyz = parseColorValue(colorA, true);\n      lchA = convertXyzToOklch(xyz);\n    }\n    if (colorB.startsWith('color(')) {\n      const xyz = parseColorFunc(colorB, true);\n      lchB = convertXyzToOklch(xyz);\n    } else {\n      const xyz = parseColorValue(colorB, true);\n      lchB = convertXyzToOklch(xyz);\n    }\n    if (REG_CURRENT_COLOR.test(colorA)) {\n      lchA = reInsertMissingColorComponents(CC_LCH, lchA);\n    } else if (regMissingColor.test(colorA)) {\n      lchA = reInsertMissingColorComponents(colorA, lchA);\n    }\n    if (REG_CURRENT_COLOR.test(colorB)) {\n      lchB = reInsertMissingColorComponents(CC_LCH, lchB);\n    } else if (regMissingColor.test(colorB)) {\n      lchB = reInsertMissingColorComponents(colorB, lchB);\n    }\n    if (regMissingColor.test(colorA)) {\n      lchA = reInsertMissingColorComponents(colorA, lchA);\n    }\n    if (regMissingColor.test(colorB)) {\n      lchB = reInsertMissingColorComponents(colorB, lchB);\n    }\n    const [\n      [lA, cA, hA, aaA],\n      [lB, cB, hB, aaB]\n    ] = normalizeColorComponents(lchA, lchB);\n    const factorA = aaA * pA;\n    const factorB = aaB * pB;\n    a = (factorA + factorB);\n    let l, c, h;\n    if (a === 0) {\n      l = lA * pA + lB * pB;\n      c = cA * pA + cB * pB;\n      h = hA * pA + hB * pB;\n    } else {\n      l = (lA * factorA + lB * factorB) * a;\n      c = (cA * factorA + cB * factorB) * a;\n      h = (hA * factorA + hB * factorB) * a;\n    }\n    [r, g, b] = resolveColorValue(`oklch(${l} ${c} ${h})`);\n  }\n  return [r, g, b, a * m];\n};\n"],
  "mappings": "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",
  "names": ["color_exports", "__export", "angleToDeg", "convertColorValueToLinearRgb", "convertColorValueToRgb", "convertHexToLinearRgb", "convertHexToRgb", "convertHexToXyz", "convertLinearRgbToHex", "convertLinearRgbToRgb", "convertRgbToHex", "convertRgbToLinearRgb", "convertRgbToXyz", "convertRgbToXyzD50", "convertXyzD50ToHex", "convertXyzD50ToLab", "convertXyzD50ToLch", "convertXyzD50ToRgb", "convertXyzToHex", "convertXyzToHsl", "convertXyzToHwb", "convertXyzToOklab", "convertXyzToOklch", "convertXyzToRgb", "convertXyzToXyzD50", "normalizeColorComponents", "numberToHexString", "parseAlpha", "parseColorFunc", "parseColorValue", "parseHsl", "parseHwb", "parseLab", "parseLch", "parseOklab", "parseOklch", "parseRgb", "reInsertMissingColorComponents", "resolveColorFunc", "resolveColorMix", "resolveColorValue", "transformMatrix", "validateColorComponents", "__toCommonJS", "import_common", "HALF", "DUO", "TRIA", "QUAT", "DEC", "HEX", "DEG", "DEG_INTERVAL", "MAX_PCT", "MAX_RGB", "POW_SQUARE", "POW_CUBE", "POW_LINEAR", "LINEAR_COEF", "LINEAR_OFFSET", "LAB_L", "LAB_A", "LAB_B", "LAB_EPSILON", "LAB_KAPPA", "D50", "MATRIX_D50_TO_D65", "MATRIX_D65_TO_D50", "MATRIX_RGB_TO_XYZ", "MATRIX_XYZ_TO_RGB", "MATRIX_XYZ_TO_LMS", "MATRIX_LMS_TO_XYZ", "MATRIX_OKLAB_TO_LMS", "MATRIX_LMS_TO_OKLAB", "MATRIX_P3_TO_XYZ", "MATRIX_REC2020_TO_XYZ", "MATRIX_A98_TO_XYZ", "MATRIX_PROPHOTO_TO_XYZ_D50", "NONE", "REG_ANGLE", "REG_SRGB", "REG_COLOR_SPACE_XYZ", "REG_COLOR_SPACE_COLOR_MIX", "REG_COLOR_SPACE_RGB", "REG_NUM", "REG_PCT", "REG_HSL_HWB", "REG_HSL_LV3", "REG_RGB", "REG_RGB_LV3", "REG_LAB", "REG_LCH", "REG_COLOR_FUNC", "REG_COLOR_TYPE", "REG_COLOR_MIX_PART", "REG_COLOR_MIX_CAPT", "REG_CURRENT_COLOR", "NAMED_COLORS", "arr", "opt", "alpha", "minLength", "maxLength", "minRange", "maxRange", "validateRange", "l", "msg", "i", "v", "mtx", "vct", "r1c1", "r1c2", "r1c3", "r2c1", "r2c2", "r2c3", "r3c1", "r3c2", "r3c3", "v1", "v2", "v3", "p1", "p2", "p3", "value", "color", "v4", "v1m", "v2m", "v3m", "v4m", "regRgb", "regColor", "regHsl", "regLab", "regLch", "colorA", "colorB", "hex", "angle", "GRAD", "RAD", "reg", "val", "unit", "deg", "rgb", "rr", "gg", "bb", "r", "g", "b", "COND_POW", "a", "x", "y", "z", "xx", "yy", "zz", "aa", "xyz", "xyzD65", "max", "min", "d", "h", "s", "w", "bk", "xyzLms", "c", "lPct", "xyzD50", "f0", "f1", "f2", "factor", "COEF_PCT", "fl", "fa", "fb", "powFl", "powFa", "powFb", "cl", "d50", "cs", "linearRgb", "ALPHA", "BETA", "REC_COEF", "POW_A98", "regColorMix", "CC_LCH", "CC_RGB", "regColorPart", "regMissingColor", "colorSpace", "colorPartA", "colorPartB", "pctA", "pctB", "pA", "pB", "m", "rgbA", "rgbB", "rA", "gA", "bA", "aA", "rB", "gB", "bB", "aB", "factorA", "factorB", "xyzA", "xyzB", "xA", "yA", "zA", "xB", "yB", "zB", "hA", "sA", "lA", "hB", "sB", "lB", "wA", "wB", "aaA", "aaB", "aX", "bY", "lchA", "lchB", "cA", "cB"]
}
